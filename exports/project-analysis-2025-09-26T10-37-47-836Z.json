{
  "project": {
    "name": "Untitled Project",
    "type": "Unknown",
    "detectedPatterns": [
      "api-service",
      "backend-heavy",
      "web-application",
      "frontend-heavy",
      "npm-project",
      "documented-project",
      "comprehensive-docs"
    ],
    "analysisDate": "2025-09-26T10:37:47.836Z"
  },
  "codebase": {
    "totalModules": 11,
    "totalFiles": 124,
    "totalLines": 31577,
    "testCoverage": null,
    "healthScore": 54
  },
  "modules": [
    {
      "id": "backend",
      "name": "Backend API",
      "type": "backend",
      "size": 3483,
      "health": 46,
      "dependencies": 1,
      "testCoverage": 0,
      "frameworks": [
        "express"
      ],
      "risksAndIssues": [
        "Low health score",
        "Low test coverage"
      ]
    },
    {
      "id": "agents",
      "name": "Agent Library",
      "type": "knowledge",
      "size": 0,
      "health": 75,
      "dependencies": 0,
      "testCoverage": 0,
      "frameworks": [],
      "risksAndIssues": [
        "Low test coverage"
      ]
    },
    {
      "id": "data",
      "name": "Workspace Data",
      "type": "storage",
      "size": 1786,
      "health": 20,
      "dependencies": 0,
      "testCoverage": 0,
      "frameworks": [],
      "risksAndIssues": [
        "Low health score",
        "Low test coverage",
        "High technical debt"
      ]
    },
    {
      "id": "docs",
      "name": "Documentation",
      "type": "documentation",
      "size": 0,
      "health": 75,
      "dependencies": 0,
      "testCoverage": 0,
      "frameworks": [],
      "risksAndIssues": [
        "Low test coverage"
      ]
    },
    {
      "id": "legacy-exports",
      "name": "Legacy Exports",
      "type": "artifacts",
      "size": 9560,
      "health": 20,
      "dependencies": 0,
      "testCoverage": 0,
      "frameworks": [],
      "risksAndIssues": [
        "Low health score",
        "Low test coverage",
        "High technical debt"
      ]
    },
    {
      "id": "frontend",
      "name": "Frontend Interface",
      "type": "frontend",
      "size": 5546,
      "health": 58,
      "dependencies": 0,
      "testCoverage": 25,
      "frameworks": [],
      "risksAndIssues": [
        "Low test coverage"
      ]
    },
    {
      "id": "scripts",
      "name": "Automation Scripts",
      "type": "automation",
      "size": 1723,
      "health": 82,
      "dependencies": 2,
      "testCoverage": 25,
      "frameworks": [],
      "risksAndIssues": [
        "Low test coverage"
      ]
    },
    {
      "id": "services",
      "name": "Services",
      "type": "workspace",
      "size": 5471,
      "health": 20,
      "dependencies": 0,
      "testCoverage": 9,
      "frameworks": [],
      "risksAndIssues": [
        "Low health score",
        "Low test coverage",
        "High technical debt"
      ]
    },
    {
      "id": "spec",
      "name": "Spec Archive",
      "type": "artifacts",
      "size": 2062,
      "health": 20,
      "dependencies": 0,
      "testCoverage": 100,
      "frameworks": [],
      "risksAndIssues": [
        "Low health score",
        "High technical debt"
      ]
    },
    {
      "id": "src",
      "name": "Application Source",
      "type": "code",
      "size": 902,
      "health": 86,
      "dependencies": 1,
      "testCoverage": 38,
      "frameworks": [],
      "risksAndIssues": []
    },
    {
      "id": "tests",
      "name": "Tests",
      "type": "code",
      "size": 1044,
      "health": 91,
      "dependencies": 2,
      "testCoverage": 100,
      "frameworks": [],
      "risksAndIssues": []
    }
  ],
  "architecture": {
    "dependencies": [
      {
        "id": "backend->services",
        "source": "backend",
        "target": "services",
        "type": "internal"
      },
      {
        "id": "scripts->services",
        "source": "scripts",
        "target": "services",
        "type": "internal"
      },
      {
        "id": "scripts->backend",
        "source": "scripts",
        "target": "backend",
        "type": "internal"
      },
      {
        "id": "src->data",
        "source": "src",
        "target": "data",
        "type": "internal"
      },
      {
        "id": "tests->backend",
        "source": "tests",
        "target": "backend",
        "type": "internal"
      },
      {
        "id": "tests->services",
        "source": "tests",
        "target": "services",
        "type": "internal"
      }
    ],
    "complexity": {
      "level": "Low",
      "score": 3,
      "factors": {
        "moduleCount": 11,
        "dependencyCount": 6,
        "avgDependencies": 0.5
      }
    },
    "hotspots": [],
    "recommendations": [
      {
        "type": "Testing",
        "priority": "High",
        "title": "Improve Test Coverage",
        "description": "9 modules have low test coverage (<50%). Consider prioritizing testing efforts.",
        "modules": [
          "Backend API",
          "Agent Library",
          "Workspace Data"
        ]
      },
      {
        "type": "Technical Debt",
        "priority": "Medium",
        "title": "Address Technical Debt",
        "description": "Several modules have high TODO/FIXME counts indicating technical debt.",
        "modules": [
          "Legacy Exports (110 TODOs)",
          "Spec Archive (90 TODOs)",
          "Services (43 TODOs)"
        ]
      },
      {
        "type": "Architecture",
        "priority": "Medium",
        "title": "Consider Component Libraries",
        "description": "Frontend-heavy projects benefit from shared component libraries and design systems."
      },
      {
        "type": "Documentation",
        "priority": "High",
        "title": "API Documentation",
        "description": "API services need comprehensive documentation for consumers. Consider OpenAPI/Swagger."
      }
    ]
  },
  "recommendations": [
    "Stabilise low-health modules (Backend API, Workspace Data, Legacy Exports) before expanding scope.",
    "Introduce domain-driven ownership boundaries and modular builds to keep large codebases maintainable.",
    "Establish a dependency review cadence and lockfile policy for modules that lean heavily on third-party libraries.",
    "Implement Progressive Web App capabilities and critical rendering path budgets for the web surface."
  ],
  "nextSteps": [
    "Review the generated analysis and recommendations",
    "Prioritize technical debt reduction in low-health modules",
    "Implement missing tests in uncovered modules",
    "Generate OpenAPI/AsyncAPI specifications and publish them to the Docs hub.",
    "Set up API monitoring, synthetic checks, and contract tests.",
    "Implement automated accessibility tests and performance monitoring for the UI."
  ]
}