{
  "id": "setup-mg7vvafi-apr9q1-setup-progress-1759316918766-e7ib4u",
  "sessionId": "setup-mg7vvafi-apr9q1",
  "type": "setup-progress",
  "description": "Setup mode selected: new",
  "critical": false,
  "timestamp": "2025-10-01T11:08:38.766Z",
  "context": {
    "phase": "mode-selected",
    "mode": "new"
  },
  "data": {
    "phase": "mode-selected",
    "state": {
      "lastSelectedMode": null,
      "history": []
    },
    "context": {
      "modulesResult": {
        "modules": [
          {
            "id": "backend",
            "name": "Backend API",
            "type": "backend",
            "pathHints": [
              "server.js"
            ],
            "dependencies": [
              "services",
              "routes",
              "middleware"
            ],
            "externalDependencies": [
              "express",
              "cors",
              "compression",
              "ws"
            ],
            "fileCount": 1,
            "lineCount": 2344,
            "todoCount": 0,
            "coverage": 0,
            "health": 69,
            "frameworks": [
              "express"
            ],
            "source": "auto",
            "manual": false
          },
          {
            "id": "agents",
            "name": "Agent Library",
            "type": "knowledge",
            "pathHints": [
              "agents"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 0,
            "lineCount": 0,
            "todoCount": 0,
            "coverage": 0,
            "health": 75,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "data",
            "name": "Workspace Data",
            "type": "storage",
            "pathHints": [
              "data"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 30,
            "lineCount": 3717,
            "todoCount": 15,
            "coverage": 0,
            "health": 20,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "docs",
            "name": "Documentation",
            "type": "documentation",
            "pathHints": [
              "docs"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 0,
            "lineCount": 0,
            "todoCount": 0,
            "coverage": 0,
            "health": 75,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "legacy-exports",
            "name": "Legacy Exports",
            "type": "artifacts",
            "pathHints": [
              "exports"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 28,
            "lineCount": 8188,
            "todoCount": 64,
            "coverage": 0,
            "health": 20,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "middleware",
            "name": "Middleware",
            "type": "code",
            "pathHints": [
              "middleware"
            ],
            "dependencies": [
              "services"
            ],
            "externalDependencies": [
              "chokidar"
            ],
            "fileCount": 1,
            "lineCount": 290,
            "todoCount": 0,
            "coverage": 0,
            "health": 74,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "old",
            "name": "Old",
            "type": "code",
            "pathHints": [
              "old"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 0,
            "lineCount": 0,
            "todoCount": 0,
            "coverage": 0,
            "health": 75,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "playwright-report",
            "name": "Playwright Report",
            "type": "code",
            "pathHints": [
              "playwright-report"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 0,
            "lineCount": 0,
            "todoCount": 0,
            "coverage": 0,
            "health": 75,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "frontend",
            "name": "Frontend Interface",
            "type": "frontend",
            "pathHints": [
              "public"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 46,
            "lineCount": 3993,
            "todoCount": 8,
            "coverage": 0,
            "health": 35,
            "frameworks": [
              "vue"
            ],
            "source": "directory",
            "manual": false
          },
          {
            "id": "routes",
            "name": "Routes",
            "type": "code",
            "pathHints": [
              "routes"
            ],
            "dependencies": [
              "services"
            ],
            "externalDependencies": [
              "express",
              "glob"
            ],
            "fileCount": 28,
            "lineCount": 6628,
            "todoCount": 0,
            "coverage": 4,
            "health": 74,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "scripts",
            "name": "Automation Scripts",
            "type": "automation",
            "pathHints": [
              "scripts"
            ],
            "dependencies": [
              "services",
              "backend"
            ],
            "externalDependencies": [
              "@storybook",
              "${ticketListImport}",
              "${consoleImport}",
              "${specArchiveImport}"
            ],
            "fileCount": 8,
            "lineCount": 2946,
            "todoCount": 3,
            "coverage": 13,
            "health": 61,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "services",
            "name": "Services",
            "type": "workspace",
            "pathHints": [
              "services"
            ],
            "dependencies": [],
            "externalDependencies": [
              "chokidar",
              "vue",
              "react",
              "express",
              "cors",
              "node-pty"
            ],
            "fileCount": 45,
            "lineCount": 18817,
            "todoCount": 57,
            "coverage": 4,
            "health": 20,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "spec",
            "name": "Spec Archive",
            "type": "artifacts",
            "pathHints": [
              "spec"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 0,
            "lineCount": 0,
            "todoCount": 0,
            "coverage": 0,
            "health": 75,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "src",
            "name": "Application Source",
            "type": "code",
            "pathHints": [
              "src"
            ],
            "dependencies": [],
            "externalDependencies": [
              "cytoscape",
              "cytoscape-edgehandles",
              "vue",
              "@xterm",
              "mermaid",
              "marked"
            ],
            "fileCount": 91,
            "lineCount": 15123,
            "todoCount": 0,
            "coverage": 5,
            "health": 69,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "test-results",
            "name": "Test Results",
            "type": "code",
            "pathHints": [
              "test-results"
            ],
            "dependencies": [],
            "externalDependencies": [],
            "fileCount": 1,
            "lineCount": 4,
            "todoCount": 0,
            "coverage": 100,
            "health": 100,
            "frameworks": [],
            "source": "directory",
            "manual": false
          },
          {
            "id": "tests",
            "name": "Tests",
            "type": "code",
            "pathHints": [
              "tests"
            ],
            "dependencies": [
              "services",
              "src",
              "backend",
              "routes"
            ],
            "externalDependencies": [
              "node:test",
              "node:assert",
              "node:os",
              "node:path",
              "node:fs",
              "node:http",
              "node:util",
              "node:child_process",
              "@playwright",
              "express",
              "vue",
              "node:url",
              "@vue"
            ],
            "fileCount": 50,
            "lineCount": 6475,
            "todoCount": 4,
            "coverage": 100,
            "health": 61,
            "frameworks": [],
            "source": "directory",
            "manual": false
          }
        ],
        "edges": [
          {
            "id": "backend->services",
            "source": "backend",
            "target": "services",
            "type": "internal"
          },
          {
            "id": "backend->routes",
            "source": "backend",
            "target": "routes",
            "type": "internal"
          },
          {
            "id": "backend->middleware",
            "source": "backend",
            "target": "middleware",
            "type": "internal"
          },
          {
            "id": "middleware->services",
            "source": "middleware",
            "target": "services",
            "type": "internal"
          },
          {
            "id": "routes->services",
            "source": "routes",
            "target": "services",
            "type": "internal"
          },
          {
            "id": "scripts->services",
            "source": "scripts",
            "target": "services",
            "type": "internal"
          },
          {
            "id": "scripts->backend",
            "source": "scripts",
            "target": "backend",
            "type": "internal"
          },
          {
            "id": "tests->services",
            "source": "tests",
            "target": "services",
            "type": "internal"
          },
          {
            "id": "tests->src",
            "source": "tests",
            "target": "src",
            "type": "internal"
          },
          {
            "id": "tests->backend",
            "source": "tests",
            "target": "backend",
            "type": "internal"
          },
          {
            "id": "tests->routes",
            "source": "tests",
            "target": "routes",
            "type": "internal"
          }
        ],
        "summary": {
          "moduleCount": 16,
          "dependencyCount": 11,
          "externalDependencyCount": 36,
          "totalLines": 68525
        }
      },
      "ticketData": {
        "tickets": [],
        "nextId": 1
      },
      "features": [],
      "packageJson": {
        "name": "opnix",
        "version": "1.0.0",
        "description": "Opnix - Operational Toolkit",
        "main": "server.js",
        "scripts": {
          "start": "node server.js",
          "dev": "nodemon server.js",
          "lint": "pnpm lint:js && pnpm lint:css",
          "lint:js": "eslint .",
          "lint:css": "stylelint '**/*.css' '**/*.scss'",
          "claude:next": "curl http://localhost:7337/api/claude/next",
          "claude:export": "curl http://localhost:7337/api/export/markdown > tickets.md",
          "bug:start": "node scripts/bugWorkflow.js start",
          "bug:complete": "node scripts/bugWorkflow.js complete",
          "bug:pause": "node scripts/bugWorkflow.js pause",
          "bug:resume": "node scripts/bugWorkflow.js resume",
          "bug:status": "node scripts/bugWorkflow.js status",
          "bug:active": "node scripts/bugWorkflow.js active",
          "bug:validate": "node scripts/bugWorkflow.js validate",
          "setup:wizard": "node scripts/setupWizard.js",
          "setup:install": "node scripts/installCli.js",
          "terminal:install": "node scripts/terminalStatusBar.js install",
          "terminal:uninstall": "node scripts/terminalStatusBar.js uninstall",
          "terminal:status": "node scripts/terminalStatusBar.js status",
          "progress": "node scripts/progressCommand.js",
          "progress:summary": "node scripts/progressCommand.js summary",
          "progress:help": "node scripts/progressCommand.js help",
          "storybook:generate": "node scripts/generateStories.js",
          "storybook": "pnpm exec storybook dev -p 6006",
          "build-storybook": "pnpm exec storybook build",
          "test:modules": "node run-modules-tests.js",
          "test:runbook": "node tests/runbookGenerator.test.mjs",
          "test:e2e": "playwright test",
          "test:e2e:ui": "playwright test --ui",
          "test:e2e:headed": "playwright test --headed",
          "test:e2e:debug": "playwright test --debug",
          "test:e2e:report": "playwright show-report test-results/playwright-report",
          "build": "vite build",
          "prepare": "husky"
        },
        "dependencies": {
          "@xterm/addon-fit": "^0.10.0",
          "@xterm/addon-web-links": "^0.11.0",
          "@xterm/xterm": "^5.5.0",
          "ansi_up": "^5.1.0",
          "compression": "^1.8.1",
          "cors": "^2.8.5",
          "cytoscape": "^3.28.1",
          "cytoscape-edgehandles": "^4.0.1",
          "express": "^5.1.0",
          "marked": "^12.0.2",
          "mermaid": "^10.6.1",
          "vue": "^3.4.38",
          "ws": "^8.18.3"
        },
        "devDependencies": {
          "@eslint/js": "^9.36.0",
          "@playwright/test": "^1.55.1",
          "@storybook/addon-a11y": "^8.2.6",
          "@storybook/addon-essentials": "^8.2.6",
          "@storybook/addon-interactions": "^8.2.6",
          "@storybook/addon-themes": "^8.2.6",
          "@storybook/test": "^8.2.6",
          "@storybook/vue3-vite": "^8.2.6",
          "@vitejs/plugin-vue": "^6.0.1",
          "@vue/server-renderer": "^3.5.22",
          "eslint": "^9.36.0",
          "eslint-plugin-vue": "^10.5.0",
          "husky": "^9.1.7",
          "lint-staged": "^16.2.1",
          "node-pty": "^1.0.0",
          "nodemon": "^3.0.1",
          "playwright": "^1.55.1",
          "storybook": "^8.2.6",
          "stylelint": "^16.24.0",
          "stylelint-config-standard": "^39.0.0",
          "stylelint-config-standard-scss": "^16.0.0",
          "stylelint-scss": "^6.12.1",
          "vite": "^6.3.6",
          "vue-eslint-parser": "^10.2.0"
        },
        "lint-staged": {
          "*.{js,vue,mjs}": [
            "eslint --fix",
            "git add"
          ]
        }
      }
    },
    "mode": "new",
    "timestamp": "2025-10-01T11:08:38.766Z"
  },
  "version": "1.0.0"
}